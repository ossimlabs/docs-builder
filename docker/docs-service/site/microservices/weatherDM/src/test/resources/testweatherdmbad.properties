## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/weather
spring.datasource.username= blueground
spring.datasource.password= blueground

spring.jmx.default-domain = weather

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.spatial.dialect.postgis.PostgisDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Output sql
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

#Logging
logging.level.org.springframework.web=ERROR

spring.main.web-application-type=NONE
spring.main.banner-mode=off

# manager properties
manager.startupDelaySeconds=0
manager.cleanupEnabled=true
manager.cleanupDelaySeconds=1000
manager.cleanupSleepSeconds=3600

#WeatherDataManager properties
weatherdatamanager.dataOlderThanDays=1
weatherdatamanager.ingesterSpringFile=testweatherbad.xml

#File Transfer directories
AFWAWeather.enabled = true
AFWAWeather.feedId = AFWAWeather
AFWAWeather.feedName = AFWA Weather Ingester
AFWAWeather.inboxDir = /blueground/data/afwa
AFWAWeather.successDir = /blueground/data/afwa/archive
AFWAWeather.errorDir = /blueground/data/afwa/reject
AFWAWeather.filePattern = .*3hr_steps.*|.*1hr_steps.*
AFWAWeather.fileSuffix = OC

RTNEPHWeather.enabled = true
RTNEPHWeather.feedId = RTNEPHWeather
RTNEPHWeather.feedName = RTNEPH Quarter Grid Weather Ingester
RTNEPHWeather.inboxDir = /blueground/data/rtneph
RTNEPHWeather.successDir = /blueground/data/rtneph/archive
RTNEPHWeather.errorDir = /blueground/data/rtneph/reject
RTNEPHWeather.filePattern = .*RTNEPH.*txt.*
RTNEPHWeather.fileSuffix = OC
