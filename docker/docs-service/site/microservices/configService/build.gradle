plugins {
    id 'org.springframework.boot'
    id "org.sonarqube" version "2.7"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

description = 'ConfigService'

bootJar.archiveFileName = name + '.jar'

publish.dependsOn bootJar

sonarqube {
    properties {
        property "sonar.projectName", "configService"
        property "sonar.projectKey", "configService"
        property "sonar.host.url", "http://10.0.0.224:9000"
        property "sonar.login", "f5fdae9da549e7be4ec273c01e54aa388b5f946e"
    }
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled =  true
        csv.enabled =  false
    }
}

dependencyManagement {
    imports {
        mavenBom('org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE') {
            bomProperty 'hystrix.version', '1.4.3'
            bomProperty 'spring-boot.version', "$springboot_version"
            bomProperty 'spring-cloud-commons.version', "$springcloud_version"
            bomProperty 'spring-cloud-config.version', "$springcloud_version"
            bomProperty 'spring-cloud-netflix.version', "$springcloud_version"

            dependencies {
                dependency 'com.netflix.netflix-commons:netflix-commons-util:0.1.1'
            }
        }

        mavenBom ("org.springframework.boot:spring-boot-dependencies:$springboot_version") {
            bomProperty 'commons-codec.version', '1.10'
            bomProperty 'guava', "20.0"
            bomProperty 'httpclient.version', '4.5.4'
            bomProperty 'httpcore.version', '4.4.7'
            bomProperty 'jackson.version', "$jackson_version"
            bomProperty 'joda-time.version', "$jodatime_version"
            bomProperty 'micrometer.version', '1.1.3'

            dependencies {
                dependency 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.6.7'
                dependency 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8'
                dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.8'
                dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8'
                dependency 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.9.8'
                dependency 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.8'
                dependency "com.google.guava:guava:20.0"
                dependency 'org.springframework:spring-context-support:5.1.5.RELEASE'
                dependency 'org.springframework.boot:spring-boot-actuator:2.1.3.RELEASE'
                dependency 'org.springframework.boot:spring-boot-actuator-autoconfigure:2.1.3.RELEASE'
                dependency 'org.springframework.boot:spring-boot-starter-actuator:2.1.3.RELEASE'
                dependency 'org.springframework.boot:spring-boot-starter-freemarker:2.1.3.RELEASE'
                dependency 'org.springframework.security:spring-security-crypto:5.1.4.RELEASE'
            }
        }

        mavenBom ("org.glassfish.jaxb:jaxb-bom:$jaxb_version") {
            dependencies {
                dependency 'com.sun.xml.bind:jaxb-impl:2.2'
                dependency 'com.sun.xml.bind:jaxb-xjc:2.2'
            }
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.springframework.cloud:spring-cloud-config-server:$springcloud_version"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$springcloud_version"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        testImplementation 'net.bytebuddy:byte-buddy-agent:1.9.3'
    }
}

test.finalizedBy jacocoTestReport
